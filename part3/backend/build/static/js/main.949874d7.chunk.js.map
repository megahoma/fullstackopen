{"version":3,"sources":["components/Filter.js","service/dbService.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","filter","setFilter","value","onChange","e","target","baseUrl","axios","get","newObj","post","id","delete","setName","setNumber","put","name","number","PersonForm","persons","newName","newPhone","setPersons","setNewName","setNewPhone","onSubmit","event","preventDefault","person","Object","values","window","confirm","dbService","then","response","data","personsObject","Math","random","concat","type","Person","setMessage","indexOf","onClick","text","setTimeout","catch","err","Persons","map","Notification","message","className","App","useState","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.949874d7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ filter, setFilter }) => {\r\n  return (\r\n    <div>\r\n      filter:\r\n      <input\r\n        value={filter}\r\n        onChange={(e) => {\r\n          setFilter(e.target.value)\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { Filter }\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst create = (newObj) => {\r\n  return axios.post(baseUrl, newObj)\r\n}\r\n\r\nconst update = (id, setName, setNumber) => {\r\n  return axios.put(`${baseUrl}/${id}`, {\r\n    id: id,\r\n    name: setName,\r\n    number: setNumber,\r\n  })\r\n}\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default { getAll, create, remove, update }\r\n","import React from 'react'\r\nimport dbService from '../service/dbService'\r\n\r\nconst PersonForm = ({\r\n  persons,\r\n  newName,\r\n  newPhone,\r\n  setPersons,\r\n  setNewName,\r\n  setNewPhone,\r\n}) => {\r\n  const Addphone = (event) => {\r\n    event.preventDefault()\r\n\r\n    for (let person of persons) {\r\n      for (let name of Object.values(person)) {\r\n        if (newName === name) {\r\n          if (\r\n            window.confirm(\r\n              `${newName} is already added to phonebook, replace the old number with a new one?`\r\n            )\r\n          ) {\r\n            dbService.update(person.id, newName, newPhone).then((response) => {\r\n              setPersons(response.data)\r\n              setNewName('')\r\n              setNewPhone('')\r\n            })\r\n          }\r\n          return\r\n        }\r\n      }\r\n    }\r\n\r\n    const personsObject = {\r\n      id: Math.random(),\r\n      name: newName,\r\n      number: newPhone,\r\n    }\r\n\r\n    dbService.create(personsObject).then((response) => {\r\n      setPersons(persons.concat(response.data))\r\n      setNewName('')\r\n      setNewPhone('')\r\n    })\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={Addphone}>\r\n      <div>\r\n        name:{' '}\r\n        <input\r\n          value={newName}\r\n          onChange={(e) => {\r\n            setNewName(e.target.value)\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        number:{' '}\r\n        <input\r\n          value={newPhone}\r\n          onChange={(e) => {\r\n            setNewPhone(e.target.value)\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <button type=\"submit\">add</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport { PersonForm }\r\n","import React from 'react'\r\nimport dbService from '../service/dbService'\r\n\r\nconst Person = ({ person, filter, setMessage, setPersons }) => {\r\n  if (person.name.indexOf(filter) !== -1) {\r\n    return (\r\n      <tr id={person.id}>\r\n        <td>{person.name}</td>\r\n        <td>{person.number}</td>\r\n        <td>\r\n          <button\r\n            onClick={() => {\r\n              if (window.confirm(`Delete ${person.name} ?`)) {\r\n                dbService\r\n                  .remove(person.id)\r\n                  .then((response) => {\r\n                    setPersons(response.data)\r\n                    setMessage({\r\n                      text: `${person.name} has removed`,\r\n                      type: 'success',\r\n                    })\r\n                    setTimeout(() => {\r\n                      setMessage(null)\r\n                    }, 3000)\r\n                  })\r\n                  .catch((err) => {\r\n                    setMessage({\r\n                      text: `${person.name} was already remov from server`,\r\n                      type: 'error',\r\n                    })\r\n                    setTimeout(() => {\r\n                      setMessage(null)\r\n                    }, 3000)\r\n                  })\r\n              }\r\n            }}\r\n          >\r\n            delete\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    )\r\n  } else {\r\n    return <></>\r\n  }\r\n}\r\n\r\nexport { Person }\r\n","import React from 'react'\r\nimport { Person } from './Person'\r\n\r\nconst Persons = ({ persons, filter, setMessage, setPersons }) => {\r\n  return (\r\n    <table>\r\n      <tbody>\r\n        {persons.map((person) => (\r\n          <Person\r\n            key={person.id}\r\n            person={person}\r\n            filter={filter}\r\n            setMessage={setMessage}\r\n            setPersons={setPersons}\r\n          />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport { Persons }\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n  return (\r\n    <div className={`notification notification_${message.type}`}>\r\n      {message.text}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { Notification }\r\n","import React, { useState, useEffect } from 'react'\n\nimport { Filter } from './components/Filter'\nimport { PersonForm } from './components/PersonForm'\nimport { Persons } from './components/Persons'\nimport { Notification } from './components/Notification'\n\nimport dbService from './service/dbService'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newPhone, setNewPhone] = useState('')\n  const [filter, setFilter] = useState('')\n  const [message, setMessage] = useState(null)\n\n  useEffect(() => {\n    dbService.getAll().then((response) => setPersons(response.data))\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={message} />\n\n      <Filter filter={filter} setFilter={setFilter} />\n\n      <h2>add a new</h2>\n      <PersonForm\n        persons={persons}\n        newName={newName}\n        newPhone={newPhone}\n        setPersons={setPersons}\n        setNewName={setNewName}\n        setNewPhone={setNewPhone}\n      />\n\n      <h2>Numbers</h2>\n      <Persons\n        persons={persons}\n        filter={filter}\n        setMessage={setMessage}\n        setPersons={setPersons}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}